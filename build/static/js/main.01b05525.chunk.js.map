{"version":3,"sources":["Filter.js","PersonForm.js","Person.js","Persons.js","Alert.js","services/persons.js","App.js","index.js"],"names":["Filter","onChange","value","PersonForm","onSubmit","onChangeName","valueName","onChangeNumber","valueNumber","type","Person","name","number","id","handlerClick","onDelete","onClick","Persons","persons","filter","person","toLowerCase","includes","map","Alert","message","className","baseUrl","exportDefault","getAll","axios","get","then","response","data","create","newPerson","post","remove","delete","update","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","alert","setAlert","useEffect","personsService","event","target","preventDefault","some","personToUpdate","result","prevPersons","setTimeout","concat","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01b05525.chunk.js","sourcesContent":["const Filter = ({onChange, value}) => {\r\n\r\n  return(\r\n    <div>filter shown with<input onChange={onChange} value={value}/></div>\r\n  )\r\n}\r\n\r\nexport default Filter;","const PersonForm = ({\r\n  onSubmit,\r\n  onChangeName, valueName,\r\n  onChangeNumber, valueNumber,\r\n}) => {\r\n  \r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        <div>name: <input onChange={onChangeName} value={valueName}/></div>\r\n        <div>number: <input onChange={onChangeNumber} value={valueNumber}/></div>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm;","const Person = ({name, number, id, onDelete:handlerClick}) => {\r\n\r\n  return(\r\n    <li>{name} {number} <button onClick={() => handlerClick(id, name)}>delete</button></li>\r\n  )\r\n}\r\n\r\nexport default Person;","import Person from './Person.js';\r\n\r\nconst Persons = ({persons, filter, onDelete:handlerClick}) => {\r\n\r\n  return(\r\n    <div>\r\n      <ul>\r\n      {\r\n        persons\r\n        .filter((person) => {\r\n          if(filter === '') return true;\r\n          return person.name.toLowerCase().includes(filter.toLowerCase());\r\n        })\r\n        .map((person) => <Person key={person.id} id={person.id} name={person.name} number={person.number} onDelete={handlerClick} />)\r\n      }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons;","const Alert = ({message, type}) => {\r\n  if (message === '' || (type !== 'successful' && type !== 'unsuccessful')) {\r\n    return null;\r\n  }\r\n  \r\n  return(\r\n    <div className={type}>\r\n      <p>{message}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert;","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n  .then(response => {\r\n    const {data} = response;\r\n    return data;\r\n  });\r\n}\r\n\r\nconst create = newPerson => {\r\n  return axios.post(baseUrl, newPerson)\r\n  .then(response => {\r\n    const {data} = response;\r\n    return data;\r\n  });\r\n}\r\n\r\nconst remove = id => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n  .then(response => {\r\n    const {data} = response;\r\n    return data;\r\n  })\r\n}\r\n\r\nconst update = (id, person) => {\r\n  return axios.put(`${baseUrl}/${id}`, person)\r\n  .then( response => {\r\n    const {data} = response;\r\n    return data;\r\n  })\r\n}\r\n\r\nconst exportDefault = {getAll, create, remove, update};\r\n\r\nexport default exportDefault;","import './index.css';\r\n\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nimport Filter from './Filter.js';\r\nimport PersonForm from './PersonForm.js';\r\nimport Persons from './Persons.js';\r\nimport Alert from './Alert.js';\r\n\r\nimport personsService from './services/persons.js';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newNumber, setNewNumber ] = useState('');\r\n  const [ newFilter, setNewFilter ] = useState('');\r\n  const [alert, setAlert] = useState({message: '', type: ''});\r\n\r\n  useEffect(() => {\r\n    personsService\r\n      .getAll()\r\n      .then(data => setPersons(data));\r\n  }, []);\r\n  \r\n  const handleChangeName = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const handleChangeNumber = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  const handleChangeFilter = (event) => {\r\n    setNewFilter(event.target.value);\r\n  }\r\n  \r\n  const handleClickDelete = (id, name) => {\r\n    const isConfirmedDelete = window.confirm(`Delete ${name}?`);\r\n    if (isConfirmedDelete) {\r\n      personsService\r\n      .remove(id)\r\n      .then(() => {\r\n        setPersons(prevPersons => prevPersons.filter(person => person.id !== id));\r\n        setAlert({message: `Deleted ${name}`, type: 'successful'});\r\n        setTimeout(() => {\r\n          setAlert({message: '', type: ''});\r\n        }, 5000);\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPerson = {name: newName, number: newNumber};\r\n\r\n    const isNameDuplicated = persons.some(person => person.name === newName);\r\n\r\n    if(isNameDuplicated) {      \r\n      const [personToUpdate] = persons.filter(person => person.name === newName);\r\n      \r\n      personsService.update(personToUpdate.id, newPerson)\r\n        .then(result => {\r\n          setPersons(prevPersons => prevPersons.map(person => person.id === result.id ? result : person));\r\n          setAlert({\r\n            message: `Person ${newName} updated`,\r\n            type: 'successful'\r\n          });\r\n          setTimeout(() => {\r\n            setAlert({message: '', type: ''});\r\n          }, 5000);\r\n          setNewName('');\r\n          setNewNumber('');\r\n        })\r\n    } else {\r\n      personsService\r\n      .create(newPerson)\r\n      .then(data => {\r\n        setPersons(prevPersons => prevPersons.concat(data));\r\n        setAlert({message: `Aded ${data.name}`, type: 'successful'});\r\n        setTimeout(() => {\r\n          setAlert({message: '', type: ''});\r\n        }, 5000);\r\n        setNewName('');\r\n        setNewNumber('');\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Filter onChange={handleChangeFilter} value={newFilter} />\r\n      <h2>Add a new</h2>\r\n      <PersonForm \r\n        onSubmit={handleSubmit} \r\n        onChangeName={handleChangeName} valueName={newName}\r\n        onChangeNumber={handleChangeNumber} valueNumber={newNumber}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Alert message={alert.message} type={alert.type} />\r\n      <Persons persons={persons} filter={newFilter} onDelete={handleClickDelete}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render( <App />, document.getElementById('root') );"],"sourceRoot":""}